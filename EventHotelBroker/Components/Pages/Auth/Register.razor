@page "/register"
@using EventHotelBroker.Components.Layout
@using EventHotelBroker.Services
@layout AuthLayout
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject ToastService ToastService

<PageTitle>Register - EventHotelBroker</PageTitle>

<div class="auth-container">
    <!-- Back to Home Link -->
    <div class="text-center mb-3">
        <a href="/" class="text-white text-decoration-none">
            <i class="bi bi-arrow-left me-2"></i>Back to Home
        </a>
    </div>

    <div class="auth-card">
        <div class="auth-header">
            <div class="auth-logo">
                <i class="bi bi-person-plus-fill"></i>
            </div>
            <h2>Create Account</h2>
            <p>Join EventHotelBroker today</p>
        </div>

        <div class="auth-body">
            <div class="mb-3">
                <label class="form-label-system">Full Name</label>
                <input type="text" class="form-control-system" @bind="fullName" placeholder="John Doe" />
            </div>

            <div class="mb-3">
                <label class="form-label-system">Email Address</label>
                <input type="email" class="form-control-system" @bind="email" placeholder="you@example.com" />
            </div>

            <div class="mb-3">
                <label class="form-label-system">Phone Number</label>
                <input type="tel" class="form-control-system" @bind="phone" placeholder="+254 712 345 678" />
            </div>

            <div class="mb-3">
                <label class="form-label-system">Password</label>
                <input type="password" class="form-control-system" @bind="password" placeholder="Create a strong password" />
            </div>

            <div class="mb-3">
                <label class="form-label-system">Confirm Password</label>
                <input type="password" class="form-control-system" @bind="confirmPassword" placeholder="Confirm your password" />
            </div>

            <div class="mb-3">
                <label class="form-label-system">I want to register as:</label>
                <select class="form-control-system" @bind="userRole">
                    <option value="client">Client (Book hotels & events)</option>
                    <option value="owner">Hotel/Venue Owner</option>
                </select>
            </div>

            <div class="form-check mb-4">
                <input class="form-check-input" type="checkbox" id="terms" @bind="acceptTerms">
                <label class="form-check-label" for="terms">
                    I agree to the <a href="/terms" class="text-primary">Terms & Conditions</a> and <a href="/privacy" class="text-primary">Privacy Policy</a>
                </label>
            </div>

            <button type="button" class="btn-system btn-system-primary btn-system-lg w-100 mb-3" @onclick="HandleRegister">
                <i class="bi bi-person-check me-2"></i>Create Account
            </button>

            <div class="text-center mb-3">
                <span class="text-muted">or sign up with</span>
            </div>

            <div class="row g-2 mb-4">
                <div class="col-6">
                    <button type="button" class="btn-system btn-system-outline-secondary w-100" @onclick="GoogleSignup">
                        <i class="bi bi-google me-2"></i>Google
                    </button>
                </div>
                <div class="col-6">
                    <button type="button" class="btn-system btn-system-outline-secondary w-100" @onclick="FacebookSignup">
                        <i class="bi bi-facebook me-2"></i>Facebook
                    </button>
                </div>
            </div>

            <div class="text-center">
                <span class="text-muted">Already have an account? </span>
                <a href="/login" class="text-primary fw-bold" style="text-decoration: none;">Sign in</a>
            </div>
        </div>
    </div>
</div>

<style>
    .auth-container {
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 2rem;
    }

    .auth-card {
        background: white;
        border-radius: 1.5rem;
        box-shadow: 0 20px 60px rgba(0,0,0,0.3);
        max-width: 500px;
        width: 100%;
        overflow: hidden;
        margin: 2rem 0;
    }

    .auth-header {
        text-align: center;
        padding: 2rem 2rem 1.5rem;
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    }

    .auth-logo {
        width: 70px;
        height: 70px;
        margin: 0 auto 1rem;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 2rem;
    }

    .auth-header h2 {
        margin-bottom: 0.5rem;
        font-weight: 700;
    }

    .auth-header p {
        color: #6c757d;
        margin-bottom: 0;
    }

    .auth-body {
        padding: 2rem;
    }
</style>

@code {
    private string fullName = "";
    private string email = "";
    private string phone = "";
    private string password = "";
    private string confirmPassword = "";
    private string userRole = "client";
    private bool acceptTerms = false;

    private async Task HandleRegister()
    {
        if (string.IsNullOrEmpty(fullName) || string.IsNullOrEmpty(email) || string.IsNullOrEmpty(password))
        {
            ToastService.ShowWarning("Missing Information", "Please fill in all required fields");
            return;
        }

        if (password != confirmPassword)
        {
            ToastService.ShowError("Password Mismatch", "Passwords do not match");
            return;
        }

        if (!acceptTerms)
        {
            ToastService.ShowWarning("Terms Required", "Please accept the terms and conditions");
            return;
        }

        ToastService.ShowSuccess("Registration Successful!", "Welcome to EventHotelBroker");
        
        // Simulate registration - redirect based on role
        await Task.Delay(1000);
        if (userRole == "owner")
        {
            Navigation.NavigateTo("/owner/dashboard");
        }
        else
        {
            Navigation.NavigateTo("/user/dashboard");
        }
    }

    private void GoogleSignup()
    {
        ToastService.ShowInfo("Google Signup", "Google authentication would be integrated here");
    }

    private void FacebookSignup()
    {
        ToastService.ShowInfo("Facebook Signup", "Facebook authentication would be integrated here");
    }
}

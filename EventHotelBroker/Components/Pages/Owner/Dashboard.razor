@page "/owner/dashboard"
@using EventHotelBroker.Models
@using EventHotelBroker.Services
@inject IHotelService HotelService
@inject IBookingService BookingService
@inject IEventService EventService

<PageTitle>Owner Dashboard - EventHotelBroker</PageTitle>

<div class="owner-dashboard">
    <!-- Dashboard Header -->
    <div class="dashboard-header">
        <div class="header-content">
            <div class="header-info">
                <h1 class="dashboard-title">
                    <i class="bi bi-speedometer2 me-3"></i>Owner Dashboard
                </h1>
                <p class="dashboard-subtitle">Manage your properties and bookings</p>
            </div>
            <a href="/owner/create-hotel" class="btn-modern btn-gradient-primary">
                <i class="bi bi-plus-circle me-2"></i>Add New Hotel
            </a>
        </div>
    </div>

    @if (isLoading)
    {
        <div class="loading-state">
            <div class="spinner-modern"></div>
            <p class="loading-text">Loading dashboard...</p>
        </div>
    }
    else
    {
        <!-- Statistics Cards -->
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-icon stat-icon-primary">
                    <i class="bi bi-building"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-label">My Hotels</div>
                    <div class="stat-value">@myHotels.Count()</div>
                </div>
            </div>

            <div class="stat-card">
                <div class="stat-icon stat-icon-success">
                    <i class="bi bi-check-circle"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-label">Published</div>
                    <div class="stat-value">@myHotels.Count(h => h.IsPublished && h.IsApproved)</div>
                </div>
            </div>

            <div class="stat-card">
                <div class="stat-icon" style="background: linear-gradient(135deg, #2563eb 0%, #3b82f6 100%);">
                    <i class="bi bi-box-seam"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-label">Event Equipments</div>
                    <div class="stat-value">@eventEquipmentsCount</div>
                </div>
            </div>

            <div class="stat-card">
                <div class="stat-icon" style="background: linear-gradient(135deg, #f59e0b 0%, #fbbf24 100%);">
                    <i class="bi bi-gift"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-label">Event Packages</div>
                    <div class="stat-value">@eventPackagesCount</div>
                </div>
            </div>

            <div class="stat-card">
                <div class="stat-icon stat-icon-warning">
                    <i class="bi bi-clock-history"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-label">Pending Approval</div>
                    <div class="stat-value">@myHotels.Count(h => h.IsPublished && !h.IsApproved)</div>
                </div>
            </div>

            <div class="stat-card">
                <div class="stat-icon stat-icon-info">
                    <i class="bi bi-calendar-check"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-label">Booking Requests</div>
                    <div class="stat-value">@bookingRequests.Count()</div>
                </div>
            </div>
        </div>

        <div class="dashboard-content">
            <!-- My Hotels -->
            <div class="content-main">
                <div class="modern-card">
                    <div class="card-header-modern">
                        <h5 class="card-title-modern">
                            <i class="bi bi-building me-2"></i>My Hotels
                        </h5>
                        <a href="/owner/hotels" class="btn-modern btn-outline-primary btn-sm">View All</a>
                    </div>
                    <div class="card-body-modern">
                        @if (myHotels.Any())
                        {
                            <div class="hotel-list">
                                @foreach (var hotel in myHotels.Take(5))
                                {
                                    <div class="hotel-item">
                                        <div class="hotel-item-content">
                                            <h6 class="hotel-item-name">@hotel.Name</h6>
                                            <p class="hotel-item-location">
                                                <i class="bi bi-geo-alt"></i> @hotel.City, @hotel.Country
                                            </p>
                                            <div class="hotel-item-meta">
                                                <span class="meta-item">
                                                    <i class="bi bi-people"></i> @hotel.Capacity guests
                                                </span>
                                                <span class="meta-item">
                                                    <i class="bi bi-currency-dollar"></i> @hotel.Currency @hotel.PricePerNight.ToString("N0")/night
                                                </span>
                                            </div>
                                        </div>
                                        <div class="hotel-item-actions">
                                            @if (hotel.IsApproved)
                                            {
                                                <span class="status-badge status-success">
                                                    <i class="bi bi-check-circle"></i> Approved
                                                </span>
                                            }
                                            else if (hotel.IsPublished)
                                            {
                                                <span class="status-badge status-warning">
                                                    <i class="bi bi-clock"></i> Pending
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="status-badge status-secondary">
                                                    <i class="bi bi-file-earmark"></i> Draft
                                                </span>
                                            }
                                            <a href="/owner/hotels/@hotel.Id/edit" class="btn-modern btn-outline-primary btn-sm">
                                                <i class="bi bi-pencil"></i> Edit
                                            </a>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="empty-state">
                                <i class="bi bi-building empty-state-icon"></i>
                                <h3 class="empty-state-title">No Hotels Yet</h3>
                                <p class="empty-state-text">Start by adding your first property</p>
                                <a href="/owner/create-hotel" class="btn-modern btn-gradient-primary">
                                    <i class="bi bi-plus-circle me-2"></i>Add Your First Hotel
                                </a>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Recent Booking Requests -->
            <div class="content-sidebar">
                <div class="modern-card">
                    <div class="card-header-modern">
                        <h5 class="card-title-modern">
                            <i class="bi bi-calendar-check me-2"></i>Booking Requests
                        </h5>
                        <a href="/owner/bookings" class="btn-modern btn-outline-primary btn-sm">View All</a>
                    </div>
                    <div class="card-body-modern">
                        @if (bookingRequests.Any())
                        {
                            <div class="booking-list">
                                @foreach (var booking in bookingRequests.Take(5))
                                {
                                    <div class="booking-item">
                                        <div class="booking-header">
                                            <span class="booking-id">Booking #@booking.Id</span>
                                            <span class="status-badge status-@GetStatusColor(booking.Status)">@booking.Status</span>
                                        </div>
                                        <div class="booking-dates">
                                            <i class="bi bi-calendar"></i>
                                            @booking.StartDate.ToString("MMM dd") - @booking.EndDate.ToString("MMM dd")
                                        </div>
                                        <div class="booking-guests">
                                            <i class="bi bi-people"></i> @booking.HeadCount guests
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="empty-state-small">
                                <i class="bi bi-calendar-x"></i>
                                <p>No booking requests yet</p>
                            </div>
                        }
                    </div>
                </div>

                <!-- Quick Actions -->
                <div class="modern-card mb-4">
                    <div class="card-header-modern">
                        <h5 class="card-title-modern">
                            <i class="bi bi-lightning me-2"></i>Quick Actions
                        </h5>
                    </div>
                    <div class="card-body-modern">
                        <div class="d-grid gap-2">
                            <a href="/owner/create-hotel" class="btn-modern btn-gradient-primary">
                                <i class="bi bi-building me-2"></i>Add New Hotel
                            </a>
                            <a href="/owner/create-equipment" class="btn-modern" style="background: linear-gradient(135deg, #2563eb 0%, #3b82f6 100%); color: white;">
                                <i class="bi bi-box-seam me-2"></i>Add Event Equipment
                            </a>
                            <a href="/owner/create-package" class="btn-modern" style="background: linear-gradient(135deg, #f59e0b 0%, #fbbf24 100%); color: white;">
                                <i class="bi bi-gift me-2"></i>Create Event Package
                            </a>
                            <a href="/owner/event-equipments" class="btn-modern btn-outline-primary">
                                <i class="bi bi-list-ul me-2"></i>Manage Equipment
                            </a>
                            <a href="/owner/event-packages" class="btn-modern btn-outline-primary">
                                <i class="bi bi-card-list me-2"></i>Manage Packages
                            </a>
                        </div>
                    </div>
                </div>

                <!-- Quick Tips -->
                <div class="modern-card tips-card">
                    <div class="card-header-modern">
                        <h5 class="card-title-modern">
                            <i class="bi bi-lightbulb me-2"></i>Quick Tips
                        </h5>
                    </div>
                    <div class="card-body-modern">
                        <div class="tips-list">
                            <div class="tip-item">
                                <i class="bi bi-check-circle"></i>
                                <span>Add high-quality photos to attract more bookings</span>
                            </div>
                            <div class="tip-item">
                                <i class="bi bi-check-circle"></i>
                                <span>Respond to inquiries within 24 hours</span>
                            </div>
                            <div class="tip-item">
                                <i class="bi bi-check-circle"></i>
                                <span>Keep your availability calendar updated</span>
                            </div>
                            <div class="tip-item">
                                <i class="bi bi-check-circle"></i>
                                <span>Bundle equipment into packages for better sales</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private bool isLoading = true;
    private List<Hotel> myHotels = new();
    private List<Booking> bookingRequests = new();
    private string? currentUserId;
    private int eventEquipmentsCount = 0;
    private int eventPackagesCount = 0;

    protected override async Task OnInitializedAsync()
    {
        // Since authentication is removed, use a default owner ID (you can change this as needed)
        currentUserId = "1"; // Default to first owner

        try
        {
            myHotels = (await HotelService.GetHotelsByOwnerAsync(currentUserId)).ToList();
            
            // Get bookings for all my hotels
            foreach (var hotel in myHotels)
            {
                var hotelBookings = await BookingService.GetBookingsByHotelAsync(hotel.Id);
                bookingRequests.AddRange(hotelBookings.Where(b => b.Status == BookingStatus.Pending));
            }

            // Add dummy bookings if none exist
            if (!bookingRequests.Any() && myHotels.Any())
            {
                var firstHotel = myHotels.First();
                bookingRequests.Add(new Booking
                {
                    Id = 101,
                    HotelId = firstHotel.Id,
                    Hotel = firstHotel,
                    StartDate = DateTime.Now.AddDays(7),
                    EndDate = DateTime.Now.AddDays(9),
                    HeadCount = 2,
                    Status = BookingStatus.Pending,
                    UserId = "user-1"
                });
                bookingRequests.Add(new Booking
                {
                    Id = 102,
                    HotelId = firstHotel.Id,
                    Hotel = firstHotel,
                    StartDate = DateTime.Now.AddDays(14),
                    EndDate = DateTime.Now.AddDays(16),
                    HeadCount = 4,
                    Status = BookingStatus.Pending,
                    UserId = "user-2"
                });
                bookingRequests.Add(new Booking
                {
                    Id = 103,
                    HotelId = firstHotel.Id,
                    Hotel = firstHotel,
                    StartDate = DateTime.Now.AddDays(21),
                    EndDate = DateTime.Now.AddDays(23),
                    HeadCount = 3,
                    Status = BookingStatus.Pending,
                    UserId = "user-3"
                });
            }

            // Load event statistics
            var equipments = await EventService.GetEquipmentsByProviderAsync(currentUserId);
            eventEquipmentsCount = equipments.Count();
            
            var packages = await EventService.GetPackagesByProviderAsync(currentUserId);
            eventPackagesCount = packages.Count();
        }
        catch (Exception)
        {
            // Handle error
        }
        finally
        {
            isLoading = false;
        }
    }

    private string GetStatusColor(BookingStatus status)
    {
        return status switch
        {
            BookingStatus.Pending => "warning",
            BookingStatus.Confirmed => "success",
            BookingStatus.Rejected => "danger",
            BookingStatus.Cancelled => "secondary",
            _ => "secondary"
        };
    }
}

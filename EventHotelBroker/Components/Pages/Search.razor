@page "/search"
@using EventHotelBroker.Models
@using EventHotelBroker.Services
@inject IHotelService HotelService

<PageTitle>Search Hotels - EventHotelBroker</PageTitle>

<div class="container-fluid">
    <div class="row">
        <!-- Filters Sidebar -->
        <div class="col-lg-3 mb-4">
            <div class="card shadow-sm sticky-top" style="top: 20px;">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Filters</h5>
                </div>
                <div class="card-body">
                    <EditForm Model="searchFilters" OnSubmit="HandleSearch" FormName="searchForm">
                        <div class="mb-3">
                            <label for="keyword" class="form-label">Keyword</label>
                            <InputText @bind-Value="searchFilters.Keyword" class="form-control" id="keyword" 
                                placeholder="Hotel name..." />
                        </div>

                        <div class="mb-3">
                            <label for="city" class="form-label">City</label>
                            <InputText @bind-Value="searchFilters.City" class="form-control" id="city" 
                                placeholder="e.g., Nairobi" />
                        </div>

                        <div class="mb-3">
                            <label for="minCapacity" class="form-label">Minimum Capacity</label>
                            <InputNumber @bind-Value="searchFilters.MinCapacity" class="form-control" id="minCapacity" 
                                placeholder="Number of guests" />
                        </div>

                        <div class="mb-3">
                            <label for="maxPrice" class="form-label">Maximum Price (KES)</label>
                            <InputNumber @bind-Value="searchFilters.MaxPrice" class="form-control" id="maxPrice" />
                            @if (searchFilters.MaxPrice.HasValue)
                            {
                                <small class="text-muted">Up to KES @searchFilters.MaxPrice.Value.ToString("N0")</small>
                            }
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-search me-2"></i>Search
                            </button>
                            <button type="button" class="btn btn-outline-secondary" @onclick="ClearFilters">
                                Clear Filters
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>

        <!-- Results -->
        <div class="col-lg-9">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2>Available Hotels</h2>
                <span class="text-muted">@hotels.Count() results found</span>
            </div>

            @if (isLoading)
            {
                <div class="text-center py-5">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            }
            else if (!hotels.Any())
            {
                <div class="alert alert-info">
                    <i class="bi bi-info-circle me-2"></i>
                    No hotels found matching your criteria. Try adjusting your filters.
                </div>
            }
            else
            {
                <div class="row g-4">
                    @foreach (var hotel in hotels)
                    {
                        <div class="col-md-6 col-xl-4">
                            <div class="card h-100 shadow-sm hover-shadow">
                                <div class="card-img-top bg-secondary position-relative" style="height: 200px;">
                                    @if (hotel.Images.Any())
                                    {
                                        <img src="@hotel.Images.First().Url" alt="@hotel.Name" 
                                            class="w-100 h-100" style="object-fit: cover;" />
                                    }
                                    else
                                    {
                                        <div class="d-flex align-items-center justify-content-center h-100">
                                            <i class="bi bi-building text-white" style="font-size: 4rem;"></i>
                                        </div>
                                    }
                                    @if (hotel.IsApproved)
                                    {
                                        <span class="position-absolute top-0 end-0 m-2 badge bg-success">
                                            <i class="bi bi-check-circle me-1"></i>Verified
                                        </span>
                                    }
                                </div>
                                <div class="card-body d-flex flex-column">
                                    <h5 class="card-title">@hotel.Name</h5>
                                    <p class="card-text text-muted mb-2">
                                        <i class="bi bi-geo-alt"></i> @hotel.City, @hotel.Country
                                    </p>
                                    
                                    @if (!string.IsNullOrEmpty(hotel.Description))
                                    {
                                        <p class="card-text small text-muted">
                                            @(hotel.Description.Length > 100 ? hotel.Description.Substring(0, 100) + "..." : hotel.Description)
                                        </p>
                                    }

                                    <div class="mt-auto">
                                        <div class="d-flex justify-content-between align-items-center mb-2">
                                            <small class="text-muted">
                                                <i class="bi bi-people"></i> Up to @hotel.Capacity guests
                                            </small>
                                        </div>
                                        
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div>
                                                <span class="h5 mb-0 text-primary">@hotel.Currency @hotel.PricePerNight.ToString("N0")</span>
                                                <small class="text-muted">/night</small>
                                            </div>
                                            <a href="/hotels/@hotel.Id" class="btn btn-primary btn-sm">
                                                View Details
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>

<style>
    .hover-shadow {
        transition: box-shadow 0.3s ease-in-out;
    }
    
    .hover-shadow:hover {
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
    }
</style>

@code {
    [SupplyParameterFromForm]
    private SearchFilters searchFilters { get; set; } = new();

    private IEnumerable<Hotel> hotels = new List<Hotel>();
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadHotels();
    }

    private async Task LoadHotels()
    {
        isLoading = true;
        try
        {
            hotels = await HotelService.GetPublishedHotelsAsync();
        }
        catch (Exception)
        {
            hotels = new List<Hotel>();
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task HandleSearch()
    {
        isLoading = true;
        try
        {
            hotels = await HotelService.SearchHotelsAsync(
                searchFilters.Keyword,
                searchFilters.City,
                searchFilters.MinCapacity,
                searchFilters.MaxPrice
            );
        }
        catch (Exception)
        {
            hotels = new List<Hotel>();
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task ClearFilters()
    {
        searchFilters = new SearchFilters();
        await LoadHotels();
    }

    public class SearchFilters
    {
        public string? Keyword { get; set; }
        public string? City { get; set; }
        public int? MinCapacity { get; set; }
        public decimal? MaxPrice { get; set; }
    }
}

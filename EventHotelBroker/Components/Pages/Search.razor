@page "/search"
@using EventHotelBroker.Models
@using EventHotelBroker.Services
@inject IHotelService HotelService

<PageTitle>Search Hotels - EventHotelBroker</PageTitle>

<div class="search-page">
    <!-- Search Header -->
    <div class="search-header">
        <div class="container-fluid px-4">
            <h1 class="search-title">
                <i class="bi bi-search me-3"></i>Discover Hotels
            </h1>
            <p class="search-subtitle">Find the perfect venue for your next event</p>
        </div>
    </div>

    <div class="container-fluid px-4 py-4">
        <div class="row g-4">
            <!-- Advanced Filters Sidebar -->
            <div class="col-lg-3">
                <div class="filter-card">
                    <div class="filter-header">
                        <h5 class="filter-title">
                            <i class="bi bi-funnel me-2"></i>Filters
                        </h5>
                        <button type="button" class="filter-clear-btn" @onclick="ClearFilters">
                            <i class="bi bi-x-circle"></i>
                        </button>
                    </div>
                    <div class="filter-body">
                        <EditForm Model="searchFilters" OnSubmit="HandleSearch" FormName="searchForm" class="filter-form">
                            <div class="filter-group">
                                <label class="filter-label">
                                    <i class="bi bi-search"></i> Keyword
                                </label>
                                <div class="filter-input-wrapper">
                                    <InputText @bind-Value="searchFilters.Keyword" class="filter-input" id="keyword" 
                                        placeholder="Search by name..." />
                                </div>
                            </div>

                            <div class="filter-group">
                                <label class="filter-label">
                                    <i class="bi bi-geo-alt"></i> Location
                                </label>
                                <div class="filter-input-wrapper">
                                    <InputText @bind-Value="searchFilters.City" class="filter-input" id="city" 
                                        placeholder="City or region" />
                                </div>
                            </div>

                            <div class="filter-group">
                                <label class="filter-label">
                                    <i class="bi bi-people"></i> Capacity
                                </label>
                                <div class="filter-input-wrapper">
                                    <InputNumber @bind-Value="searchFilters.MinCapacity" class="filter-input" id="minCapacity" 
                                        placeholder="Min guests" />
                                </div>
                            </div>

                            <div class="filter-group">
                                <label class="filter-label">
                                    <i class="bi bi-currency-dollar"></i> Max Price
                                </label>
                                <div class="filter-input-wrapper">
                                    <InputNumber @bind-Value="searchFilters.MaxPrice" class="filter-input" id="maxPrice" 
                                        placeholder="Price limit" />
                                </div>
                                @if (searchFilters.MaxPrice.HasValue)
                                {
                                    <small class="filter-hint">Up to KES @searchFilters.MaxPrice.Value.ToString("N0")</small>
                                }
                            </div>

                            <button type="submit" class="filter-apply-btn">
                                <i class="bi bi-search me-2"></i>Apply Filters
                            </button>
                        </EditForm>
                </div>
            </div>
        </div>

            <!-- Results Section -->
            <div class="col-lg-9">
                <div class="results-header">
                    <div class="results-info">
                        <h3 class="results-title">Available Hotels</h3>
                        <span class="results-count">@hotels.Count() properties found</span>
                    </div>
                    <div class="results-sort">
                        <button class="sort-btn">
                            <i class="bi bi-sort-down me-2"></i>Sort by
                        </button>
                    </div>
                </div>

                @if (isLoading)
                {
                    <div class="loading-state">
                        <div class="spinner-modern"></div>
                        <p class="loading-text">Searching hotels...</p>
                    </div>
                }
                else if (!hotels.Any())
                {
                    <div class="empty-state">
                        <i class="bi bi-search empty-state-icon"></i>
                        <h3 class="empty-state-title">No Hotels Found</h3>
                        <p class="empty-state-text">Try adjusting your filters or search criteria</p>
                        <button class="btn-modern btn-gradient-primary" @onclick="ClearFilters">
                            <i class="bi bi-arrow-clockwise me-2"></i>Clear Filters
                        </button>
                    </div>
                }
                else
                {
                    <div class="hotel-grid">
                        @foreach (var hotel in hotels)
                        {
                            <div class="hotel-card">
                                <div class="hotel-image">
                                    @if (hotel.Images?.Any() == true)
                                    {
                                        <img src="@hotel.Images.First().Url" alt="@hotel.Name" />
                                    }
                                    else
                                    {
                                        <div class="hotel-placeholder">
                                            <i class="bi bi-building"></i>
                                        </div>
                                    }
                                    @if (hotel.IsApproved)
                                    {
                                        <div class="hotel-badge">
                                            <i class="bi bi-patch-check-fill"></i>
                                            <span>Verified</span>
                                        </div>
                                    }
                                    <div class="hotel-overlay">
                                        <a href="/hotels/@hotel.Id" class="hotel-view-btn">
                                            <i class="bi bi-eye me-2"></i>View Details
                                        </a>
                                    </div>
                                </div>
                                <div class="hotel-content">
                                    <h5 class="hotel-name">@hotel.Name</h5>
                                    <p class="hotel-location">
                                        <i class="bi bi-geo-alt"></i> @hotel.City, @hotel.Country
                                    </p>
                                    
                                    @if (!string.IsNullOrEmpty(hotel.Description))
                                    {
                                        <p class="hotel-description">
                                            @(hotel.Description.Length > 80 ? hotel.Description.Substring(0, 80) + "..." : hotel.Description)
                                        </p>
                                    }

                                    <div class="hotel-meta">
                                        <div class="hotel-capacity">
                                            <i class="bi bi-people"></i>
                                            <span>@hotel.Capacity guests</span>
                                        </div>
                                    </div>
                                    
                                    <div class="hotel-footer">
                                        <div class="hotel-price">
                                            <span class="price-amount">@hotel.Currency @hotel.PricePerNight.ToString("N0")</span>
                                            <span class="price-period">/night</span>
                                        </div>
                                        <a href="/hotels/@hotel.Id" class="hotel-book-btn">
                                            <i class="bi bi-arrow-right"></i>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private SearchFilters searchFilters { get; set; } = new();

    private IEnumerable<Hotel> hotels = new List<Hotel>();
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadHotels();
    }

    private async Task LoadHotels()
    {
        isLoading = true;
        try
        {
            hotels = await HotelService.GetPublishedHotelsAsync();
        }
        catch (Exception)
        {
            hotels = new List<Hotel>();
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task HandleSearch()
    {
        isLoading = true;
        try
        {
            hotels = await HotelService.SearchHotelsAsync(
                searchFilters.Keyword,
                searchFilters.City,
                searchFilters.MinCapacity,
                searchFilters.MaxPrice
            );
        }
        catch (Exception)
        {
            hotels = new List<Hotel>();
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task ClearFilters()
    {
        searchFilters = new SearchFilters();
        await LoadHotels();
    }

    public class SearchFilters
    {
        public string? Keyword { get; set; }
        public string? City { get; set; }
        public int? MinCapacity { get; set; }
        public decimal? MaxPrice { get; set; }
    }
}
